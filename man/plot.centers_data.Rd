% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2.clustering_part1.R
\name{centers_data}
\alias{centers_data}
\alias{centers_deep}
\alias{plot.centers_data}
\title{Prediction of clusters centroid position}
\usage{
centers_data(sample.subquality, sample.table, referenceDB)

centers_deep(sample.dbscan, sample.table, referenceDB)

\method{plot}{centers_data}(x, ..., sample = "all", save.plot = FALSE, format = "png", dpi = 300)
}
\arguments{
\item{sample.subquality}{an object of class \code{read_sample}, inherited
from \code{\link{read_sample}}.}

\item{sample.table}{object of class \code{sample_table}, inherited from
\code{\link{read_sampleTable}}.}

\item{referenceDB}{an object of class \code{reference_dbscan}, inherited
from \code{\link{reference_dbscan}}}

\item{sample.dbscan}{an object of class \code{sample_dbscan}, inherited
from \code{\link{sample_dbscan}}.}

\item{x}{an object of class \code{centers_data}}

\item{...}{Arguments to be passed to methods}

\item{sample}{'all' to show all samples, or a numeric vector indicating
the row number of samples in the project table.}

\item{save.plot}{logical. If TRUE the plots are exported to a file.}

\item{format}{a string indicating the file format for the export.
Available formats: 'eps', 'ps', 'tex', 'pdf', 'jpeg', 'tiff', 'png',
'bmp', 'svg', 'wmf'.}

\item{dpi}{numeric. Image resolution.}
}
\value{
An object of class \code{centers_data} containing a sublist for
  each sample. Each sublist has the following components:
  \item{quality}{quality threshold used in \code{\link{read_sample}}.}
  \item{reference}{reference ID.}
  \item{centers}{a data frame with the centroids coordinates.}
  \item{data}{a data frame with the fluorescence intensities.}
}
\description{
This function calculates the centroids position of empty partitions and
single target clusters, then predicts the centroids position of multi target
clusters.
While \code{centers_data} (default workflow) calculates the centroids
position of empty partitions and single target clusters from the DBSCAN
analysis of reference, \code{centers_deep} (deep workflow) takes as input
the DBSCAN analysis of samples.
}
\examples{
\dontrun{
library(dPCP)

#Find path of sample table and location of reference and input files
sampleTable <- system.file("extdata", "Template_sampleTable.csv",
                     package = "dPCP")

fileLoc <- system.file("extdata",package = "dPCP")

#Read sample table file
sample.table <- read_sampleTable(sampleTable, system = "bio-rad",
                                 file.location = fileLoc)

#Read reference files
ref <- read_reference(sample.table, system = "bio-rad",
                      file.location = fileLoc)

#Read samples files
samp <- read_sample(sample.table, system = "bio-rad",
                    file.location = fileLoc)

#Reference DBSCAN clustering
dbref <- reference_dbscan(ref, sample.table, save.template = FALSE)

#Predict position of clusters centroid from reference DBSCAN results
cent <- centers_data(samp, sample.table,dbref)

plot(cent, sample = "all", save.plot = FALSE)
}
\dontrun{
library(dPCP)

#Find path of sample table and location of reference and input files
sampleTable <- system.file("extdata", "Template_sampleTable.csv",
                     package = "dPCP")

fileLoc <- system.file("extdata",package = "dPCP")

#Read sample table file
sample.table <- read_sampleTable(sampleTable, system = "bio-rad",
                                 file.location = fileLoc)

#Read reference files
ref <- read_reference(sample.table, system = "bio-rad",
                      file.location = fileLoc)

#Read samples files
samp <- read_sample(sample.table, system = "bio-rad",
                    file.location = fileLoc)

#Reference DBSCAN clustering
dbref <- reference_dbscan(ref, sample.table, save.template = FALSE)

#Sample DBSCAN prediction
dbsam <- sample_dbscan(samp, sample.table, dbref, file.location = fileLoc)

#Predict clusters centroid position from DBSCAN prediction
cent <- centers_deep(dbsam, sample.table,dbref)

plot(cent, sample = "all", save.plot = FALSE)
}
\dontrun{
plot(cent, sample = c(2,5), save.plot = TRUE, format = "jpg",
      dpi = 300)
}
}
